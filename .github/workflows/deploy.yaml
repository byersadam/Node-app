name: CI/CD Pipeline for Node.js App

on:
  push:
    branches:
      - main

jobs:
  build_and_push_to_ecr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build Docker image
      run: docker build -t ${{ secrets.ECR_REGISTRY }}/node-k8s-app:v${{ github.sha }} .

    - name: Login to AWS ECR
      run: |
        aws configure set region ${{ secrets.AWS_REGION }}
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

    - name: Push Docker image to ECR
      run: docker push ${{ secrets.ECR_REGISTRY }}/node-k8s-app:v${{ github.sha }}

  deploy_to_eks:
    runs-on: ubuntu-latest
    needs: build_and_push_to_ecr

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup kubectl
      run: |
        echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > ./kubeconfig
        export KUBECONFIG=./kubeconfig

    - name: Update Kubernetes deployment
      run: |
        kubectl set image deployment/node-k8s-app node-k8s-app=${{ secrets.ECR_REGISTRY }}/node-k8s-app:v${{ github.sha }}
        kubectl rollout status deployment/node-k8s-app
